#!/bin/bash

. `pwd`/env

ROOTDIR=`pwd`

help(){

    cat <<- EOF
		Installation Guide:

		ENV
		OS: CentOS 7
		nginx: 1.20.0
		PHP: 7.4.16
		MySQL: 5.7.34

		Custom parameter configuration:

			config-example.conf

			key1=value1
			...........
			keyn=valuen
		pre-install:
		sh deploy prenv  (install docker and docker-compose)
		install:
		sh deplopy [mysql|magento2|all]
		uninstall:
		sh deploy [del_mysql|del_magento2|del_all]
		set Permission:
		sh deploy setPermission

	EOF
    exit 0

}

prenv(){


        sudo yum install -y yum-utils
	sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo

        sudo yum -y install docker-ce docker-ce-cli containerd.io 

        systemctl start docker
        systemctl enable docker


        #sudo curl -L "https://github.com/docker/compose/releases/download/1.29.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo  cp ./bin/docker-compose /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
	docker-compose --version
}

uninstall(){
	yum -y remove docker-ce docker-ce-cli containerd.io
	rm -f /etc/yum.repos.d/docker-ce.repo
	rm -f /usr/local/bin/docker-compose
}

mysql(){

	DOCKERCOMPOSEFILE="$ROOTDIR/apps/mysql/docker-compose.yml"

	if [ ! -d $MYSQLDATADIR ];then
		mkdir $MYSQLDATADIR -p
	fi

	if [ -f $DOCKERCOMPOSEFILE ];then
		rm -f $DOCKERCOMPOSEFILE
		cp $ROOTDIR/template/mysql.yml $DOCKERCOMPOSEFILE
	else
		cp $ROOTDIR/template/mysql.yml $DOCKERCOMPOSEFILE
	fi

	if test -z $MYSQLCONTAINERNAME;then
		MYSQLCONTAINERNAME="mysql_server"
		sed -i "s/MYSQLCONTAINERNAME/$MYSQLCONTAINERNAME/g" $DOCKERCOMPOSEFILE
	else
		sed -i "s/MYSQLCONTAINERNAME/$MYSQLCONTAINERNAME/g" $DOCKERCOMPOSEFILE

	fi

	sed -i "s/MYSQLDATABASE/$MYSQLDATABASE/g" $DOCKERCOMPOSEFILE
	sed -i "s/MYSQLUSER/$MYSQLUSER/g" $DOCKERCOMPOSEFILE
	sed -i "s/MYSQLPASSWORD/$MYSQLPASSWORD/g" $DOCKERCOMPOSEFILE
	sed -i "s/MYSQLROOTPASSWORD/$MYSQLROOTPASSWORD/g" $DOCKERCOMPOSEFILE
	sed -i "s~MYSQLDATADIR~$MYSQLDATADIR~" $DOCKERCOMPOSEFILE

	docker-compose -f $DOCKERCOMPOSEFILE up -d
}

del_mysql(){
	DOCKERCOMPOSEFILE="$ROOTDIR/apps/mysql/docker-compose.yml"
	docker-compose -f $DOCKERCOMPOSEFILE down
}

magento2(){

	DOCKERCOMPOSEFILE="$ROOTDIR/apps/magento2/docker-compose.yml"

	if [ ! -d $WWWDATA ];then
	        mkdir $WWWDATA -p
	fi

	if [ ! -d $WWWLOGS ];then
	        mkdir $WWWLOGS -p
	fi

	if [ -f $DOCKERCOMPOSEFILE ];then
		rm -f $DOCKERCOMPOSEFILE
		cp $ROOTDIR/template/magento2.yml $DOCKERCOMPOSEFILE
	else
		cp $ROOTDIR/template/magento2.yml $DOCKERCOMPOSEFILE
	fi

	if test -z $MagentoContainerName;then
		MagentoContainerName="magento2"
		sed -i "s/MagentoContainerName/$MagentoContainerName/g" $DOCKERCOMPOSEFILE
	else
		sed -i "s/MagentoContainerName/$MagentoContainerName/g" $DOCKERCOMPOSEFILE

	fi
	sed -i "s~WWWDATA~$WWWDATA~" $DOCKERCOMPOSEFILE
	sed -i "s~WWWLOGS~$WWWLOGS~" $DOCKERCOMPOSEFILE
	sed -i "s~MAGENTO2IMAGES~$MAGENTO2IMAGES~" $DOCKERCOMPOSEFILE

	docker-compose -f $DOCKERCOMPOSEFILE up -d
}

del_magento2(){
	DOCKERCOMPOSEFILE="$ROOTDIR/apps/magento2/docker-compose.yml"
	docker-compose -f $DOCKERCOMPOSEFILE down
}

redis(){

	DOCKERCOMPOSEFILE="$ROOTDIR/apps/redis/docker-compose.yml"

        if [ ! -d $REDISDATA ];then
                mkdir $REDISDATA -p
        fi
        if [ ! -d $REDISLOGS ];then
                mkdir $REDISLOGS -p
        fi

        if [ -f $DOCKERCOMPOSEFILE ];then
                rm -f $DOCKERCOMPOSEFILE
                cp $ROOTDIR/template/redis.yml $DOCKERCOMPOSEFILE
	else
		cp $ROOTDIR/template/redis.yml $DOCKERCOMPOSEFILE
        fi

        if test -z $REDISContainerName;then
                REDISContainerName="redis"
                sed -i "s/REDISContainerName/$REDISContainerName/g" $DOCKERCOMPOSEFILE
        else
                sed -i "s/REDISContainerName/$REDISContainerName/g" $DOCKERCOMPOSEFILE

        fi

        sed -i "s/REDISIMAGES/$REDISIMAGES/g" $DOCKERCOMPOSEFILE
	sed -i "s~REDISDATA~$REDISDATA~" $DOCKERCOMPOSEFILE
	sed -i "s~REDISLOGS~$REDISLOGS~" $DOCKERCOMPOSEFILE

	docker-compose -f $DOCKERCOMPOSEFILE up -d
}

del_redis(){
	DOCKERCOMPOSEFILE="$ROOTDIR/apps/redis/docker-compose.yml"
	docker-compose -f $DOCKERCOMPOSEFILE down
}

elasticsearch(){

	DOCKERCOMPOSEFILE=$ROOTDIR/apps/elasticsearch/docker-compose.yml

	if [ ! -d $ElasticDATA ];then
	        mkdir $ElasticDATA/{data,logs} -p
	fi


        if [ -f $DOCKERCOMPOSEFILE ];then
                rm -f $DOCKERCOMPOSEFILE
                cp $ROOTDIR/template/elasticsearch.yml $DOCKERCOMPOSEFILE
	else
		cp $ROOTDIR/template/elasticsearch.yml $DOCKERCOMPOSEFILE
        fi

        if test -z $ElasticContainerName;then
                ElasticContainerName="elastic"
                sed -i "s/ElasticContainerName/$ElasticContainerName/g" $DOCKERCOMPOSEFILE
        else
                sed -i "s/ElasticContainerName/$ElasticContainerName/g" $DOCKERCOMPOSEFILE

        fi

        sed -i "s/ElasticImages/$ElasticImages/g" $DOCKERCOMPOSEFILE
        sed -i "s/ES_JAVA_OPTS_Xmx/$ES_JAVA_OPTS_Xmx/g" $DOCKERCOMPOSEFILE
        sed -i "s/ES_JAVA_OPTS_Xms/$ES_JAVA_OPTS_Xms/g" $DOCKERCOMPOSEFILE
        sed -i "s~ElasticDATA~$ElasticDATA~" $DOCKERCOMPOSEFILE
        sed -i "s~ElasticLOGS~$ElasticLOGS~" $DOCKERCOMPOSEFILE

	docker-compose -f $DOCKERCOMPOSEFILE up -d
}

del_elasticsearch(){
	DOCKERCOMPOSEFILE="$ROOTDIR/apps/elasticsearch/docker-compose.yml"
	docker-compose -f $DOCKERCOMPOSEFILE down
}

setPermission(){
	
	# $1 = container_name
	# path="/usr/share/nginx/html"
	
	container_name=$MagentoContainerName
	
	path=$M2PATH

	dir="var generated vendor pub/static pub/media app/etc"
	
	docker_cmd="docker exec -it $container_name"

	$docker_cmd chown -R nginx.nginx $path
	
	for i in $dir
	do
	        $docker_cmd find $path/$i -type f -exec chmod u+w {} +
	        $docker_cmd find $path/$i -type d -exec chmod u+w {} +
	        $docker_cmd find $path/$i -type f -exec chmod g+w {} +
	        $docker_cmd find $path/$i -type d -exec chmod g+ws {} +
	done
}

case $1 in
	"help")
	help	
	;;
	"prenv")
	prenv
	;;
	"setPermission")
	setPermission
	;;
	"mysql")
	mysql
	;;
	"magento2")
	magento2
	;;
	"redis")
	redis
	;;
	"elasticsearch")
	elasticsearch
	;;
	"all")
	mysql
	redis
	elasticsearch
	magento2
        setPermission
	;;
	"del_mysql")
	del_mysql
	;;
	"del_magento2")
	del_magento2
	;;
	"del_redis")
	del_redis
	;;
	"del_elasticsearch")
	del_elasticsearch
	;;
	"del_all")
	del_magento2
	del_redis
	del_elasticsearch
	del_mysql
	;;
	"uninstall")
	uninstall
	;;
	*)
	;;
esac
